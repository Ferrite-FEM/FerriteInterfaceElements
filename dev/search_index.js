var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = FerriteInterfaceElements","category":"page"},{"location":"#FerriteInterfaceElements","page":"Home","title":"FerriteInterfaceElements","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for FerriteInterfaceElements.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [FerriteInterfaceElements]","category":"page"},{"location":"#FerriteInterfaceElements.InterfaceCell","page":"Home","title":"FerriteInterfaceElements.InterfaceCell","text":"InterfaceCell(here::AbstractCell, there::AbstractCell) <: AbstractCell\n\nAn InterfaceCell is a cell based on two cells of lower dimension representing the two faces. The two base cells need to use the same reference shape and the order of nodes needs to match, e.g.:\n\n1---2 \"here\"\n4---3 \"there\"\nInterfaceCell(Line((1,2)), Line((4,3)))\n\nFields\n\nhere::AbstractCell: cell representing the face \"here\"\nthere::AbstractCell: cell representing the face \"there\"\nnodes::NTuple: tuple with all node indices in appropriate order: vertex nodes \"here\", vertex nodes \"there\", face nodes \"here\", ...\n\n\n\n\n\n","category":"type"},{"location":"#FerriteInterfaceElements.InterfaceCellInterpolation","page":"Home","title":"FerriteInterfaceElements.InterfaceCellInterpolation","text":"InterfaceCellInterpolation(here::ScalarInterpolation, there::ScalarInterpolation) <: ScalarInterpolation\n\nAn InterfaceCellInterpolation is an interpolation based on two interpolations on the faces of an InterfaceCell. If only one interpolation is given, it will be used for both faces.\n\nFields\n\nhere::ScalarInterpolation: interpolation on the face \"here\"\nthere::ScalarInterpolation: interpolation on the face \"there\"\n\n\n\n\n\n","category":"type"},{"location":"#FerriteInterfaceElements.InterfaceCellValues","page":"Home","title":"FerriteInterfaceElements.InterfaceCellValues","text":"InterfaceCellValues([::Type{T},] qr::QuadratureRule, func_ip::InterfaceCellInterpolation, [geom_ip::InterfaceCellInterpolation])\n\nAn InterfaceCellValues wraps two CellValues, one for each face of an InterfaceCell.\n\nFields\n\nip::InterfaceCellInterpolation: interpolation on the interface\nhere::CellValues:  values on face \"here\"\nthere::CellValues: values on face \"there\"\nbasefunctionshere::Vector{Int}: base function indices on face \"here\"\nbasefunctionsthere::Vector{Int}: base function indices on face \"there\"\n\n\n\n\n\n","category":"type"},{"location":"#Ferrite.function_gradient","page":"Home","title":"Ferrite.function_gradient","text":"function_gradient(cv::InterfaceCellValues, qp::Int, u::AbstractVector, here::Bool)\n\nCompute the gradient of the function in a quadrature point on side here, where true means \"here\" and false means \"there\". u is a vector with values for the degrees of freedom.\n\n\n\n\n\n","category":"function"},{"location":"#Ferrite.function_gradient_average-Tuple{InterfaceCellValues, Int64, AbstractVector}","page":"Home","title":"Ferrite.function_gradient_average","text":"function_gradient_average(cv::InterfaceCellValues, qp::Int, u::AbstractVector)\n\nCompute the average gradient of the function in a quadrature point.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.function_gradient_jump-Tuple{InterfaceCellValues, Int64, AbstractVector}","page":"Home","title":"Ferrite.function_gradient_jump","text":"function_gradient_jump(cv::InterfaceCellValues, qp::Int, u::AbstractVector)\n\nCompute the jump of the function gradient in a quadrature point.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.function_value","page":"Home","title":"Ferrite.function_value","text":"function_value(cv::InterfaceCellValues, qp::Int, u::AbstractVector, here::Bool)\n\nCompute the value of the function in a quadrature point on side here, where true means \"here\" and false means \"there\". u is a vector with values for the degrees of freedom.\n\n\n\n\n\n","category":"function"},{"location":"#Ferrite.function_value_average-Tuple{InterfaceCellValues, Int64, AbstractVector}","page":"Home","title":"Ferrite.function_value_average","text":"function_value_average(cv::InterfaceCellValues, qp::Int, u::AbstractVector)\n\nCompute the average value of the function in a quadrature point.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.function_value_jump-Tuple{InterfaceCellValues, Int64, AbstractVector}","page":"Home","title":"Ferrite.function_value_jump","text":"function_value_jump(cv::InterfaceCellValues, qp::Int, u::AbstractVector)\n\nCompute the jump of the function value in a quadrature point.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.shape_gradient-Tuple{InterfaceCellValues, Int64, Int64, Bool}","page":"Home","title":"Ferrite.shape_gradient","text":"shape_gradient(cv::InterfaceCellValues, qp::Int, i::Int, here::Bool)\n\nReturn the gradient of shape function i evaluated in quadrature point qp on side here, where true means \"here\" and false means \"there\".\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.shape_gradient_average-Tuple{InterfaceCellValues, Int64, Int64}","page":"Home","title":"Ferrite.shape_gradient_average","text":"shape_gradient_average(cv::InterfaceCellValues, qp::Int, i::Int)\n\nReturn the gradient of shape function i evaluated in quadrature point qp for computing the average gradient on an interface.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.shape_gradient_jump-Tuple{InterfaceCellValues, Int64, Int64}","page":"Home","title":"Ferrite.shape_gradient_jump","text":"shape_gradient_jump(cv::InterfaceCellValues, qp::Int, i::Int)\n\nReturn the gradient of shape function i evaluated in quadrature point qp for computing the gradient jump on an interface.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.shape_value-Tuple{InterfaceCellValues, Int64, Int64, Bool}","page":"Home","title":"Ferrite.shape_value","text":"shape_value(cv::InterfaceCellValues, qp::Int, i::Int, here::Bool)\n\nReturn the value of shape function i evaluated in quadrature point qp on side here, where true means \"here\" and false means \"there\".\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.shape_value_average-Tuple{InterfaceCellValues, Int64, Int64}","page":"Home","title":"Ferrite.shape_value_average","text":"shape_value_average(cv::InterfaceCellValues, qp::Int, i::Int)\n\nReturn the value of shape function i evaluated in quadrature point qp for computing the average value on an interface.\n\n\n\n\n\n","category":"method"},{"location":"#Ferrite.shape_value_jump-Tuple{InterfaceCellValues, Int64, Int64}","page":"Home","title":"Ferrite.shape_value_jump","text":"shape_value_jump(cv::InterfaceCellValues, qp::Int, i::Int)\n\nReturn the value of shape function i evaluated in quadrature point qp for computing the value jump on an interface.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_base_value-Tuple{Function, InterfaceCellValues, Int64, Int64, Bool}","page":"Home","title":"FerriteInterfaceElements.get_base_value","text":"get_base_value(get_value::Function, cv::InterfaceCellValues, qp::Int, i::Int, here::Bool)\n\nReturn a value from an ::InterfaceCellValues by specifing:\n\nget_value: function specifing which kind of value, e.g. shape_value\nqp: index of the quadrature point\ni: index of the base function\nhere: side of the interface, where true means \"here\" and false means \"there\".\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_interface_cell_shape-Tuple{Type{Ferrite.RefLine}}","page":"Home","title":"FerriteInterfaceElements.get_interface_cell_shape","text":"get_interface_cell_shape(::Type{<:AbstractRefShape})\n\nReturn the shape of an interface given a base reference shape. E.g. given RefTriangle, RefPrism is returned, meaning two triangles form an interface based on a prism.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_interface_dof_indices-Tuple{Function, InterfaceCellInterpolation}","page":"Home","title":"FerriteInterfaceElements.get_interface_dof_indices","text":"get_interface_dof_indices(get_dofs::Function, ip::InterfaceCellInterpolation)\n\nReturn a tuple of tuples with DOF indices for different entities (vertices, faces, etc.). The function get_dofs specifies which DOFs are considered, e.g. by passing vertexdof_indices.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_interface_index-Tuple{InterfaceCellInterpolation, Symbol, Integer}","page":"Home","title":"FerriteInterfaceElements.get_interface_index","text":"get_interface_index(ip::InterfaceCellInterpolation, side::Symbol, i::Integer)\n\nReturn the base function index for an InterfaceCellInterpolation given a side (:here or :there) and the local base function index i on that face.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_n_dofs_on_side-Tuple{Function, InterfaceCellInterpolation, Symbol}","page":"Home","title":"FerriteInterfaceElements.get_n_dofs_on_side","text":"get_n_dofs_on_side(get_dofs::Function, ip::InterfaceCellInterpolation, side::Symbol)\n\nReturn the number of DOFs on a side (:here or :there) of an InterfaceCellInterpolation. The function get_dofs specifies which DOFs are considered, e.g. by passing vertexdof_indices.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_side_and_baseindex-Tuple{InterfaceCellValues, Integer}","page":"Home","title":"FerriteInterfaceElements.get_side_and_baseindex","text":"get_side_and_baseindex(cv::InterfaceCellValues, i::Integer)\n\nFor an ::InterfaceCellValues: given the base function index i return the side (:here or :there) the base function belongs to and the corresponding index for the CellValues belonging to that side.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.get_sides_and_base_indices-Tuple{InterfaceCell}","page":"Home","title":"FerriteInterfaceElements.get_sides_and_base_indices","text":"get_sides_and_base_indices(c::InterfaceCell)\nget_sides_and_base_indices(::AbstractCell, ::AbstractCell)\nget_sides_and_base_indices(::Type{<:AbstractRefShape}, ::Type{<:AbstractRefShape})\n\nReturn a tuple containing tuples of a symbol (:here or :there) and an integer. The index of the outer tuple represents the node index. In the inner tuple, the symbol represents the side the node is on  and the integer represents the nodes index in the base cell.\n\n\n\n\n\n","category":"method"},{"location":"#FerriteInterfaceElements.getdetJdV_average-Tuple{InterfaceCellValues, Int64}","page":"Home","title":"FerriteInterfaceElements.getdetJdV_average","text":"getdetJdV_average(cv::InterfaceCellValues, qp::Int)\n\nReturn the average of the product between the determinant of the Jacobian on each side of the interface and the quadrature point weight for the given quadrature point: det(J(mathbfx)) w_q.\n\nThis value is typically used when integrating a function on the mid-plane of an interface element.\n\n\n\n\n\n","category":"method"}]
}
